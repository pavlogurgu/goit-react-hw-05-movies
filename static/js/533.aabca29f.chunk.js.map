{"version":3,"file":"static/js/533.aabca29f.chunk.js","mappings":"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","sources":["components/BackLink.jsx","components/MovieInfo.jsx","components/api.jsx"],"sourcesContent":["import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { BackLink } from './BackLink';\n\nimport { getMovieInfo } from './api';\n\n\nconst MovieInfo = () => {\n  const {movieId} = useParams()\n  const [info, setInfo] = useState(null)\n  const imgSrcBase = 'https://image.tmdb.org/t/p/w200'\n  const noImage = '/uc4RAVW1T3T29h6OQdr7zu4Blui.jpg'\n  const location = useLocation()\n  const backLinkHref = location.state?.from ?? '/'\n  \n  \n  \n\n    useEffect(() => {\n        async function getInfoById(movieId){\n            try{\n                const data = await getMovieInfo(movieId)\n                setInfo(data)\n            } catch(error){\n                console.log(error)\n            }\n        }\n        getInfoById(movieId)\n    }, [movieId])\n    return ( \n      <div>\n      {info && (\n      <>\n        <BackLink to={backLinkHref}>Back</BackLink>\n        <div>\n              {info.poster_path === null ? (\n              <img src={`${imgSrcBase}${noImage}`} alt={info.title} />\n            ) : (\n              <img\n                src={`${imgSrcBase}${info.poster_path}`}\n                alt={info.title}\n              />\n            )}\n        </div>\n        <div>\n          <h2>{info.title}{\" \"}{info.release_date === '' ||\n          info.release_date === undefined ? '(No date)' : `${info.release_date.slice(0, 4)}`}</h2>\n        <p>User Score: {Math.floor(info.vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{info.overview}</p>\n        <h3>Genres</h3>\n        <p>{info.genres.length === 0 ? 'No genres' : `${info.genres.map(genre =>\n          genre.name).join(', ')}`}</p>\n        </div>\n        <div>\n          <p>Additional information</p>\n          <ul>\n            <li>\n            <BackLink to={`/movies/${movieId}/cast`} state = {{from: backLinkHref}}>Cast</BackLink>\n            </li>\n            <li>\n            <BackLink to={`/movies/${movieId}/reviews`} state = {{from: backLinkHref}}>Reviews</BackLink>\n            </li>\n          </ul>\n          <Suspense fallback={<p>Loading...</p>}>\n              <Outlet />\n            </Suspense>\n        </div>\n      </>\n    )}\n      </div>\n    )\n}\n\nexport default MovieInfo\n\nMovieInfo.propTypes = {\n  info: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.array.isRequired,\n    })\n  )\n}\n\n  ","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3'\nconst MY_ACCESS_KEY = '520faa847257d57af54017c37ef43fe0'\n\n\nexport async function getTrending() {\n    try {\n      const resTrending = await axios.get(\n        `${baseURL}/trending/movie/day?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resTrending.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getBySearch(query) {\n    try {\n      const resSearch = await axios.get(\n        `${baseURL}/search/movie?api_key=${MY_ACCESS_KEY}&page=1&query=${query}`\n      );\n      return await resSearch.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieInfo(movieId) {\n    try {\n      const resMovieInfo = await axios.get(\n        `${baseURL}/movie/${movieId}?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieInfo.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieCast(movieId) {\n    try {\n      const resMovieCast = await axios.get(\n        `${baseURL}/movie/${movieId}/credits?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieCast.data\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  export async function getMovieReviews(movieId) {\n    try {\n      const resMovieReviews = await axios.get(\n        `${baseURL}/movie/${movieId}/reviews?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieReviews.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","movieId","useParams","useState","info","setInfo","imgSrcBase","backLinkHref","useLocation","state","from","useEffect","getMovieInfo","data","console","log","getInfoById","poster_path","src","alt","title","release_date","undefined","slice","Math","floor","vote_average","overview","genres","length","map","genre","name","join","Suspense","fallback","baseURL","MY_ACCESS_KEY","getTrending","axios","resTrending","results","getBySearch","query","resSearch","resMovieInfo","getMovieCast","resMovieCast","getMovieReviews","resMovieReviews"],"sourceRoot":""}