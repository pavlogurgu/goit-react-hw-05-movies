{"version":3,"file":"static/js/597.1d7d3f07.chunk.js","mappings":"yNAgDA,UA1Ca,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAcA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAA2BL,GAA3B,iGAE2BM,EAAAA,EAAAA,IAAaN,GAFxC,OAEcO,EAFd,OAGQH,EAAYG,EAAKC,MAHzB,gDAKQC,QAAQC,IAAR,MALR,yDADY,yBAAC,SAAD,2BASZC,CAAYX,EACf,GAAE,CAACA,IACmB,IAApBG,EAASS,QACD,kEAGP,wBACKT,EAASU,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAC1C,OACI,0BACKF,GACG,gBAAKG,IAAG,UAtBb,mCAsBa,OAAmBH,GAAgBI,IAAOH,KAElD,gBAAKE,IAAG,oDAAwDC,IAAOH,KAE5E,4BACK,uBAAIA,KACJ,yCACgBC,UATbH,EAclB,KAGZ,C,8LC5CKM,EAAU,+BACVC,EAAgB,mCAGf,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEyBC,EAAAA,GAAAA,IAAA,UACrBH,EADqB,uCACiBC,IAH1C,cAEKG,EAFL,gBAKYA,EAAYjB,KAAKkB,QAL7B,wEAODhB,QAAQC,IAAR,MAPC,gFAWE,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEqBJ,EAAAA,GAAAA,IAAA,UACnBH,EADmB,iCACaC,EADb,yBAC2CM,IAHhE,cAEGC,EAFH,gBAKUA,EAAUrB,KAAKkB,QALzB,wEAOHhB,QAAQC,IAAR,MAPG,gFAWA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,gGAEwBuB,EAAAA,GAAAA,IAAA,UACtBH,EADsB,kBACLpB,EADK,oBACcqB,IAHtC,cAEGS,EAFH,gBAKUA,EAAavB,KALvB,wEAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,gGAEwBuB,EAAAA,GAAAA,IAAA,UACtBH,EADsB,yBACEpB,EADF,4BAC6BqB,IAHrD,cAEGU,EAFH,gBAKUA,EAAaxB,KALvB,wEAOHE,QAAQC,IAAR,MAPG,gFAYA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,gGAE2BuB,EAAAA,GAAAA,IAAA,UACzBH,EADyB,kBACRpB,EADQ,4BACmBqB,IAH9C,cAEGY,EAFH,gBAKUA,EAAgB1B,KAAKkB,QAL/B,wEAOHhB,QAAQC,IAAR,MAPG,gF","sources":["components/Cast.jsx","components/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {getMovieCast} from './api'\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [castInfo, setCastInfo] = useState([])\n    const imgSrcBase = 'https://image.tmdb.org/t/p/w200'\n\n    useEffect(() => {\n        async function getCastInfo(movieId){\n            try{\n                const data = await getMovieCast(movieId)\n                setCastInfo(data.cast)\n            } catch(error){\n                console.log(error)\n            }\n        }\n        getCastInfo(movieId)\n    }, [movieId])\n    if(castInfo.length === 0){\n        return <p>We don`t have any cast for this movie</p>\n    }\n    return (\n        <ul>\n            {castInfo.map(({ cast_id, profile_path, name, character }) =>{\n                return(\n                    <li key = {cast_id}>\n                        {profile_path ? (\n                            <img src= {`${imgSrcBase}${profile_path}`} alt = {name}/>\n                        ) : (\n                            <img src= {`https://via.placeholder.com/200x300?text=No+image`} alt = {name}/>\n                        )}\n                       <div>\n                            <p>{name}</p>\n                            <div>\n                                Character: {character}\n                            </div>\n                       </div>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default Cast\n\nCast.propTypes = {\n    castInfo: PropTypes.arrayOf(\n        PropTypes.shape({\n            cast_id: PropTypes.number.isRequired,\n            profile_path: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            character: PropTypes.string.isRequired,\n        })\n    )\n}","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3'\nconst MY_ACCESS_KEY = '520faa847257d57af54017c37ef43fe0'\n\n\nexport async function getTrending() {\n    try {\n      const resTrending = await axios.get(\n        `${baseURL}/trending/movie/day?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resTrending.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getBySearch(query) {\n    try {\n      const resSearch = await axios.get(\n        `${baseURL}/search/movie?api_key=${MY_ACCESS_KEY}&page=1&query=${query}`\n      );\n      return await resSearch.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieInfo(movieId) {\n    try {\n      const resMovieInfo = await axios.get(\n        `${baseURL}/movie/${movieId}?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieInfo.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieCast(movieId) {\n    try {\n      const resMovieCast = await axios.get(\n        `${baseURL}/search/movie/${movieId}/credits?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieCast.data\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  export async function getMovieReviews(movieId) {\n    try {\n      const resMovieReviews = await axios.get(\n        `${baseURL}/movie/${movieId}/reviews?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieReviews.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n"],"names":["movieId","useParams","useState","castInfo","setCastInfo","useEffect","getMovieCast","data","cast","console","log","getCastInfo","length","map","cast_id","profile_path","name","character","src","alt","baseURL","MY_ACCESS_KEY","getTrending","axios","resTrending","results","getBySearch","query","resSearch","getMovieInfo","resMovieInfo","resMovieCast","getMovieReviews","resMovieReviews"],"sourceRoot":""}