{"version":3,"file":"static/js/267.77ab4153.chunk.js","mappings":"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","sources":["components/MoviesList.styled.js","components/MoviesList.jsx","components/api.jsx","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieTitle = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { Container, CardWrapper, MovieTitle } from \"./MoviesList.styled\";\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n    {movies.map(({ id, title }) => {\n      return (\n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n          <MovieTitle>\n          {title}\n          </MovieTitle>\n          </Link>\n        </CardWrapper>\n      );\n    })}\n  </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3'\nconst MY_ACCESS_KEY = '520faa847257d57af54017c37ef43fe0'\n\n\nexport async function getTrending() {\n    try {\n      const resTrending = await axios.get(\n        `${baseURL}/trending/movie/day?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resTrending.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getBySearch(query) {\n    try {\n      const resSearch = await axios.get(\n        `${baseURL}/search/movie?api_key=${MY_ACCESS_KEY}&page=1&query=${query}`\n      );\n      return await resSearch.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieInfo(movieId) {\n    try {\n      const resMovieInfo = await axios.get(\n        `${baseURL}/movie/${movieId}?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieInfo.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieCast(movieId) {\n    try {\n      const resMovieCast = await axios.get(\n        `${baseURL}/movie/${movieId}/credits?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieCast.data\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  export async function getMovieReviews(movieId) {\n    try {\n      const resMovieReviews = await axios.get(\n        `${baseURL}/movie/${movieId}/reviews?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieReviews.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n","import { Formik, Field, Form } from 'formik';\nimport PropTypes from 'prop-types';\nconst InputForm = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        query: '',\n      }}\n      onSubmit={({ query }, { resetForm }) => {\n        onSubmit(query);\n        resetForm();\n      }}\n    >\n      <Form>\n        <Field type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default InputForm;\nInputForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { useSearchParams } from \"react-router-dom\";\nimport { MoviesList } from \"../components/MoviesList\";\nimport  SearchForm  from \"../components/SearchBox\";\nimport { getBySearch } from \"../components/api\";\nimport { useState, useEffect } from 'react';\n\nconst Movies = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const queryInput = searchParams.get('query');\n  useEffect(() => {\n    if(queryInput){\n      setQuery(queryInput)\n      return\n    }\n    setQuery('')\n  }, [queryInput])\n\n  useEffect(() => {\n    if(query === ''){\n      setMovies([])\n      return\n    }\n    getBySearch(query).then(data => {\n      setMovies(data)\n    })\n    .catch(error => console.log(error))\n  }, [query])\n\n  const handleSubmit = searchQuery => {\n    setSearchParams({query: searchQuery})\n    setQuery(searchQuery)\n  }\n\n  return (\n    <main>\n      <h2>Search movies</h2>\n      <SearchForm onSubmit={handleSubmit} />\n      {movies.length === 0 && queryInput ? (\n        <p>Movie not found</p>\n      ) : <MoviesList movies={movies}/>}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","CardWrapper","MovieTitle","MoviesList","movies","location","useLocation","map","id","title","to","state","from","baseURL","MY_ACCESS_KEY","getTrending","axios","resTrending","data","results","console","log","getBySearch","query","resSearch","getMovieInfo","movieId","resMovieInfo","getMovieCast","resMovieCast","getMovieReviews","resMovieReviews","onSubmit","initialValues","resetForm","type","name","useSearchParams","searchParams","setSearchParams","useState","setQuery","setMovies","queryInput","get","useEffect","then","catch","error","searchQuery","length"],"sourceRoot":""}