{"version":3,"file":"static/js/681.77dd263f.chunk.js","mappings":"yNA0CA,UApCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAA6BL,GAA7B,iGAE2BM,EAAAA,EAAAA,IAAgBN,GAF3C,OAEcO,EAFd,OAGQH,EAAcG,GAHtB,gDAKQC,QAAQC,IAAR,MALR,yDADY,yBAAC,SAAD,2BASZC,CAAcV,EACjB,GAAE,CAACA,IACqB,IAAtBG,EAAWQ,QACH,qEAGP,wBACKR,EAAWS,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC3B,OACI,yBACG,4BACK,qCAAaD,MACb,0BACI,uBAAIC,UAJLF,EASlB,KAGZ,C,8LCtCKG,EAAU,+BACVC,EAAgB,mCAGf,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEyBC,EAAAA,GAAAA,IAAA,UACrBH,EADqB,uCACiBC,IAH1C,cAEKG,EAFL,gBAKYA,EAAYb,KAAKc,QAL7B,wEAODb,QAAQC,IAAR,MAPC,gFAWE,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEqBJ,EAAAA,GAAAA,IAAA,UACnBH,EADmB,iCACaC,EADb,yBAC2CM,IAHhE,cAEGC,EAFH,gBAKUA,EAAUjB,KAAKc,QALzB,wEAOHb,QAAQC,IAAR,MAPG,gFAWA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,gGAEwBmB,EAAAA,GAAAA,IAAA,UACtBH,EADsB,kBACLhB,EADK,oBACciB,IAHtC,cAEGS,EAFH,gBAKUA,EAAanB,KALvB,wEAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B3B,GAA5B,gGAEwBmB,EAAAA,GAAAA,IAAA,UACtBH,EADsB,kBACLhB,EADK,4BACsBiB,IAH9C,cAEGW,EAFH,gBAKUA,EAAarB,KALvB,wEAOHC,QAAQC,IAAR,MAPG,gFAYA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,gGAE2BmB,EAAAA,GAAAA,IAAA,UACzBH,EADyB,kBACRhB,EADQ,4BACmBiB,IAH9C,cAEGY,EAFH,gBAKUA,EAAgBtB,KAAKc,QAL/B,wEAOHb,QAAQC,IAAR,MAPG,gF","sources":["components/Reviews.jsx","components/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {getMovieReviews} from './api'\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviewInfo, setReviewInfo] = useState([])\n\n    useEffect(() => {\n        async function getReviewInfo(movieId){\n            try{\n                const data = await getMovieReviews(movieId)\n                setReviewInfo(data)\n            } catch(error){\n                console.log(error)\n            }\n        }\n        getReviewInfo(movieId)\n    }, [movieId])\n    if(reviewInfo.length === 0){\n        return <p>We don`t have any reviews for this movie</p>\n    }\n    return (\n        <ul>\n            {reviewInfo.map(({ id, author, content }) =>{\n                return(\n                    <li key = {id}>\n                       <div>\n                            <h3>Author: {author}</h3>\n                            <div>\n                                <p>{content}</p>\n                            </div>\n                       </div>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default Reviews\n\nReviews.propTypes = {\n    reviewInfo: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            author: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n        })\n    )\n}","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3'\nconst MY_ACCESS_KEY = '520faa847257d57af54017c37ef43fe0'\n\n\nexport async function getTrending() {\n    try {\n      const resTrending = await axios.get(\n        `${baseURL}/trending/movie/day?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resTrending.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getBySearch(query) {\n    try {\n      const resSearch = await axios.get(\n        `${baseURL}/search/movie?api_key=${MY_ACCESS_KEY}&page=1&query=${query}`\n      );\n      return await resSearch.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieInfo(movieId) {\n    try {\n      const resMovieInfo = await axios.get(\n        `${baseURL}/movie/${movieId}?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieInfo.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export async function getMovieCast(movieId) {\n    try {\n      const resMovieCast = await axios.get(\n        `${baseURL}/movie/${movieId}/credits?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieCast.data\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  export async function getMovieReviews(movieId) {\n    try {\n      const resMovieReviews = await axios.get(\n        `${baseURL}/movie/${movieId}/reviews?api_key=${MY_ACCESS_KEY}`\n      );\n      return await resMovieReviews.data.results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n"],"names":["movieId","useParams","useState","reviewInfo","setReviewInfo","useEffect","getMovieReviews","data","console","log","getReviewInfo","length","map","id","author","content","baseURL","MY_ACCESS_KEY","getTrending","axios","resTrending","results","getBySearch","query","resSearch","getMovieInfo","resMovieInfo","getMovieCast","resMovieCast","resMovieReviews"],"sourceRoot":""}